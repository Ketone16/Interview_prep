#base image , application will run on top of an OpenJDK 8 runtime environment.
FROM openjdk:8

EXPOSE 8080

#copies the file from local inside the docker image
ADD target/devops-integration.jar devops-integration.jar

# runs the Java application by executing the JAR file
ENTRYPOINT ["java","-jar","/devops-integration.jar"]

-----------------------------------------------------------------------------------------------
FROM ubuntu:latest

# Set the working directory in the image
WORKDIR /app

# Copy the files from the host file system to the image file system
COPY . /app

# Install the necessary packages
RUN apt-get update && apt-get install -y python3 python3-pip

# Set environment variables
ENV NAME World

# Run a command to start the application
CMD ["python3", "app.py"]


------------------------------------------------------------------------------------
#mutistagege dockerfile example

# First stage: complete build environment
FROM maven:3.5.0-jdk-8-alpine AS builder

# add pom.xml and source code
ADD ./pom.xml pom.xml
ADD ./src src/

# package jar
RUN mvn clean package

# Second stage: minimal runtime environment
From openjdk:8-jre-alpine

# copy jar from the first stage
COPY --from=builder target/my-app-1.0-SNAPSHOT.jar my-app-1.0-SNAPSHOT.jar

EXPOSE 8080

CMD ["java", "-jar", "my-app-1.0-SNAPSHOT.jar"]
